package com.app{	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	import com.greensock.TweenMax;	import com.greensock.TimelineLite;	import com.greensock.easing.*;	import flash.text.TextField;	import com.greensock.TimelineLite;	import flash.text.TextFormat;	import flash.display.Sprite;	import flash.media.Sound;	public class Card extends MovieClip	{		var numeros:uint = 25;		var numeracion:Array = [];		var cardNumbers:Array = numerals();		var $user:uint = 0;		var todos:Array = [];		var container:Sprite= new Sprite();		var loader:URLLoader= new URLLoader();		var rq:URLRequest= new URLRequest();		var variables:URLVariables= new URLVariables();		var celdas:Array = [];		var filas:Object = {B:[],I:[],N:[],G:[],O:[]};		public function Card($uid:uint)		{			// constructor code			$user = $uid;			var currentX = 36.25;			var currentY = 109.2;			var i:uint = 0;			for (i = 0; i < cardNumbers.length; i++)			{				var cell:Cell = new Cell();				Globals.vars.gameNums.push(cardNumbers[i]);				cell.numero.text = cardNumbers[i];				cell.x = currentX;				cell.y = currentY;				if ((currentX <= 205.75))				{					currentX +=  56.5;				}				else				{					currentX = 36.25;					currentY +=  56.5;				}				//despues hay que depurar esta opcion				switch (Globals.vars.totalUsers)				{					case 1 :						cell.numero.textColor = 0xA54600;						break;					case 2 :						cell.numero.textColor = 0x003D36;						break;					case 3 :						cell.numero.textColor = 0x3E5900;						break;					case 4 :						cell.numero.textColor = 0xA70039;						break;					case 5 :						cell.numero.textColor = 0x470002;						break;				}				if ((i != 12))				{					addChild(cell);					setChildIndex(cell,1);					cell.addEventListener(MouseEvent.CLICK,selectNumber);				}			}			switch (Globals.vars.totalUsers)			{				case 1 :					x = 1280;					y = 605;					gotoAndPlay('yellow');					break;				case 2 :					x = 570;					y = 605;					gotoAndPlay('blue');					break;				case 3 :					x = 472;					y = 367;					rotation = 90;					gotoAndPlay('green');					break;				case 4 :					x = 920;					y = 471;					rotation = 180;					gotoAndPlay('pink');					break;				case 5 :					x = 1632;					y = 471;					rotation = 180;					gotoAndPlay('red');					break;			}			addChild(container);		}		function selectNumber(e:Event):void		{			var clickNum:uint = e.currentTarget.numero.text;			var wichCell = e.currentTarget.parent.getChildIndex(e.currentTarget);			if (Globals.vars.gameInited && clickNum == Globals.vars.numero)			{				// agrega a las filas en caso de hacer un alinea horizontal				if ((wichCell < 6))				{					filas.B.length < 5 ? filas.B.push(wichCell):false;					filas.B.length == 5 ? bonus():false;				}				if (((wichCell > 5) && wichCell < 11))				{					filas.I.length < 5 ? filas.I.push(wichCell):bonus();					filas.I.length == 5 ? bonus():false;				}				if (((wichCell > 10) && wichCell < 15))				{					filas.N.length < 4 ? filas.N.push(wichCell):bonus();					filas.N.length == 4 ? bonus():false;				}				if (((wichCell > 14) && wichCell < 20))				{					filas.G.length < 5 ? filas.G.push(wichCell):bonus();					filas.G.length == 5 ? bonus():false;				}				if (((wichCell > 19) && wichCell < 25))				{					filas.O.length < 5 ? filas.O.push(wichCell):bonus();					filas.O.length == 5 ? bonus():false;				}				e.currentTarget.gotoAndPlay('selected');				e.currentTarget.removeEventListener(MouseEvent.CLICK,selectNumber);				celdas.push(clickNum);				checkWinner();			}		}		public function bonus():void		{			trace($user)			if (Globals.vars.linea > 0)			{				rq.url = Globals.vars.api + $user + '/points/';				rq.method = URLRequestMethod.POST;				variables.value = Globals.vars.linea;				rq.data = variables;				loader.addEventListener(Event.COMPLETE, bonusAdded);				loader.load(rq);			}		}		function bonusAdded(event:Event):void		{			var texto:TextField= new TextField();			texto.defaultTextFormat = new TextFormat('Helvetica',10,0xFFFFFFF);			texto.text = '+' + Globals.vars.linea;			texto.selectable = false;			texto.embedFonts = true;			var animatext:TimelineLite= new TimelineLite();			animatext.add(TweenMax.fromTo(texto,1,{y:0, scaleX:0,scaleY:0, autoAlpha:0},{y:-80,scaleX:5,scaleY:5, autoAlpha:1, ease:Circ.easeIn}));			animatext.add(TweenMax.to(texto,1,{y:-180, autoAlpha:0, ease:Circ.easeInOut}));			container.addChild(texto);			Globals.vars.linea = 0;		}		public function numerals():Array		{			var num_cards:Number = 4;			var num_tiles:Number = 25;			var numbers:Array = new Array();			var cards:Array   = new Array();			var c:Number = 0;			for (var j=0; j<num_cards; j++)			{				cards[j] = new Array();				for (var k=0; k<num_tiles; k++)				{					c++;					numbers.push(c);				}			}			while (numbers.length > 0)			{				var index:Number = Math.floor(Math.random() * numbers.length - 1);				cards[numbers.length % num_cards].push(numbers.splice(index, 1));			}			for (var i=0; i<cards.length; i++)			{				//cards[i].sort(Array.NUMERIC);			}			return cards[0];		}		public function checkWinner():void		{			if (celdas.length >= 24 && Globals.vars.premio > 0)			{				rq.url = Globals.vars.api + $user + '/points/';				rq.method = URLRequestMethod.POST;				variables.value = Globals.vars.premio;				rq.data = variables;				loader.addEventListener(Event.COMPLETE, winner);				loader.load(rq);				var Anim:TweenMax = TweenMax.to(this,1,{scaleX:1.2,scaleY:1.2});			}		}		public function winner(event:Event):void		{			Globals.vars.premio = 0;			while (container.numChildren > 0)			{				container.removeChildAt(0);			}			var texto:TextField= new TextField();			texto.defaultTextFormat = new TextFormat('Helvetica',32,0xFFFFFFF,null,null,null,null,null,'center');			texto.text = "¡GANADOR!";			texto.width = 350;			texto.selectable = false;			var animatext:TimelineLite= new TimelineLite();			animatext.add(TweenMax.fromTo(texto,1,{y:0,autoAlpha:0},{y:-80,autoAlpha:1, ease:Circ.easeIn}));			animatext.add(TweenMax.to(texto,1,{y:-180, autoAlpha:0, ease:Circ.easeInOut}),3);			container.addChild(texto);			var winnerSound:Sound= new Winner();			winnerSound.play()		}			}}