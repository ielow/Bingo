package com.app{	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.events.Event;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.net.URLRequestMethod;	import flash.net.URLVariables;	import com.greensock.TweenMax;	import com.greensock.TimelineLite;	import com.greensock.easing.*;	import flash.text.TextField;	import com.greensock.TimelineLite;	import flash.text.TextFormat;	import flash.display.Sprite;	import flash.media.Sound;	public class Card extends MovieClip	{		var cardNumbers:Array = numerals();		var $user:String = "";		var container:Sprite= new Sprite();		var cellContainer:Sprite= new Sprite();		var loader:URLLoader= new URLLoader();		var rq:URLRequest= new URLRequest();		var variables:URLVariables= new URLVariables();		var player:Player;		var celdas:Array = [];		var filas:Object = {B:[],I:[],N:[],G:[],O:[]};						public function Card($uid:String,$folio:String, $credit:uint)		{			// constructor code			$user = $uid;			var currentX = 36.25;			var currentY = 110;			var i:uint = 0;			player = new Player($uid,$folio,$credit);			player.x =  -player.width;			player.y = this.height - player.height;						addChild(player)						TweenMax.fromTo(player,1,{autoAlpha:0},{autoAlpha:1, ease:Circ.easeInOut})			for (i = 0; i < cardNumbers.length; i++)			{				var cell:Cell = new Cell();				//Globals.vars.gameNums.push(cardNumbers[i]);				cell.numero.text = cardNumbers[i];				cell.x = currentX;				cell.y = currentY;								if ((currentY <= 279.5))				{					currentY +=  56.5;				}				else				{					currentX += 56.5;					currentY =  109.2;				}				//despues hay que depurar esta opcion				switch (Globals.vars.totalUsers)				{					case 1 :						cell.numero.textColor = 0xA54600;						break;					case 2 :						cell.numero.textColor = 0x003D36;						break;					case 3 :						cell.numero.textColor = 0x3E5900;						break;					case 4 :						cell.numero.textColor = 0xA70039;						break;					case 5 :						cell.numero.textColor = 0x470002;						break;				}				if ((i != 12))				{					addChild(cellContainer)					cellContainer.addChild(cell);					cellContainer.name='celdas'					//setChildIndex(cell,1);					cell.addEventListener(MouseEvent.CLICK,selectNumber);				}			}			switch (Globals.vars.totalUsers)			{				case 1 :					x = 1280;					y = 605;					gotoAndPlay('yellow');					break;				case 2 :					x = 570;					y = 605;					gotoAndPlay('blue');					break;				case 3 :					x = 472;					y = 367;					rotation = 90;					gotoAndPlay('green');					break;				case 4 :					x = 920;					y = 471;					rotation = 180;					gotoAndPlay('pink');					player.x = width - player.width;					break;				case 5 :					x = 1632;					y = 471;					rotation = 180;					gotoAndPlay('red');					player.x = width - player.width;					break;			}			addChild(container);		}		function selectNumber(e:Event):void		{			var clickNum:uint = e.currentTarget.numero.text;			var wichCell = e.currentTarget.parent.getChildIndex(e.currentTarget);			if (Globals.vars.gameInited /*&& clickNum == Globals.vars.numero*/)			{				// agrega a las filas en caso de hacer un alinea horizontal				if ((wichCell < 6))				{					filas.B.length < 5 ? filas.B.push(wichCell):false;					filas.B.length == 5 ? bonus():false;				}				if (((wichCell > 5) && wichCell < 11))				{					filas.I.length < 5 ? filas.I.push(wichCell):bonus();					filas.I.length == 5 ? bonus():false;				}				if (((wichCell > 10) && wichCell < 15))				{					filas.N.length < 4 ? filas.N.push(wichCell):bonus();					filas.N.length == 4 ? bonus():false;				}				if (((wichCell > 14) && wichCell < 20))				{					filas.G.length < 5 ? filas.G.push(wichCell):bonus();					filas.G.length == 5 ? bonus():false;				}				if (((wichCell > 19) && wichCell < 25))				{					filas.O.length < 5 ? filas.O.push(wichCell):bonus();					filas.O.length == 5 ? bonus():false;				}				e.currentTarget.gotoAndPlay('selected');				e.currentTarget.removeEventListener(MouseEvent.CLICK,selectNumber);				celdas.push(clickNum);				checkWinner();			}		}		public function bonus():void		{			if (Globals.vars.linea > 0)			{				rq.url = Globals.vars.api + $user + '/points/';				rq.method = URLRequestMethod.POST;				variables.value = Globals.vars.linea;				rq.data = variables;				loader.addEventListener(Event.COMPLETE, bonusAdded);				loader.load(rq);			}		}		function bonusAdded(event:Event):void		{			var texto:TextField= new TextField();			var animatext:TimelineLite= new TimelineLite();			var actual:uint = Number(player.credit_txt.text);			//formato de Texto			texto.defaultTextFormat = new TextFormat('Helvetica',10,0xFFFFFFF);			texto.text = '+' + Globals.vars.linea;			texto.selectable = false;			texto.embedFonts = true;			// Animacion			animatext.add(TweenMax.fromTo(texto,1,{y:0, scaleX:0,scaleY:0, autoAlpha:0},{y:-80,scaleX:5,scaleY:5, autoAlpha:1, ease:Circ.easeIn}));			animatext.add(TweenMax.to(texto,1,{y:-180, autoAlpha:0, ease:Circ.easeInOut}));			container.addChild(texto);			player.credit_txt.text = String((actual + Globals.vars.linea));			Globals.vars.linea = 0;		}		public function numerals():Array		{			var columnas:Number = 5;			var filas:Number = 10;			var celdas:uint=25;			var mapa:Array= [];			var integrado:Array=[]			var output:Array=[]			var i:uint=0;			var j:uint=0;						//Crea la numeracion			for (i=0; i < columnas; i++)			{				mapa.push(new Array());				for (j=0; j < filas; j++)				{					mapa[i].push((j+1)+(i)*10);				}			}			// desordena las columnas			for (i=0; i < mapa.length; i++)			{				for (j=0; j < mapa[i].length; j++)				{					Globals.shuffleArray(mapa[i])				}			}						//Extrae solo los necesarios						for (i=0; i < mapa.length; i++){				integrado.push(mapa[i].slice(5))			}						//Regresa el arreglo integrado			for (i=0; i < integrado.length; i++)			{				for (j=0; j < integrado[i].length; j++)				{					output.push(integrado[i][j])				}			}			return output;		}		public function checkWinner():void		{			if (celdas.length >= 24 && Globals.vars.premio > 0)			{				rq.url = Globals.vars.api + $user + '/points/';				rq.method = URLRequestMethod.POST;				variables.value = Globals.vars.premio;				rq.data = variables;				loader.addEventListener(Event.COMPLETE, winner);				loader.load(rq);				var Anim:TweenMax = TweenMax.to(this,1,{scaleX:1.2,scaleY:1.2});			}		}		public function winner(event:Event):void		{			var actual:uint = Number(player.credit_txt.text);			player.credit_txt.text = String((actual + Globals.vars.premio));			while (container.numChildren > 0)			{				container.removeChildAt(0);			}			var texto:TextField= new TextField();			texto.defaultTextFormat = new TextFormat('Helvetica',32,0xFFFFFFF,null,null,null,null,null,'center');			texto.text = "¡GANADOR!";			texto.width = 350;			texto.selectable = false;			var animatext:TimelineLite= new TimelineLite();			animatext.add(TweenMax.fromTo(texto,1,{y:0,autoAlpha:0},{y:-80,autoAlpha:1, ease:Circ.easeIn}));			animatext.add(TweenMax.to(texto,1,{y:-180, autoAlpha:0, ease:Circ.easeInOut}),3);			container.addChild(texto);			var winnerSound:Sound= new Winner();			winnerSound.play();			Globals.vars.premio = 0;		}		public function charge()		{			var actual:uint = Number(player.credit_txt.text);			player.credit_txt.text = String((actual + Globals.vars.precio));		}		public function getCardNumbers():Array{			return cardNumbers;			}	}}